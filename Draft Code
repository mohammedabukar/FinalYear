#define TRIG_PIN 9
#define ECHO_PIN 8
#define BUZZER_PIN 6
#define MOTOR_PIN 5

const int hazardThreshold = 50;  // cm

void setup() {
  Serial.begin(9600);

  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(MOTOR_PIN, OUTPUT);

  // Ensure outputs start LOW
  digitalWrite(BUZZER_PIN, LOW);
  digitalWrite(MOTOR_PIN, LOW);
}

float getDistanceCM() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH, 30000); // timeout after 30ms
  if (duration == 0) return -1;  // No object detected

  float distance = duration * 0.034 / 2;
  return distance;
}

void loop() {
  float distance = getDistanceCM();

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  if (distance > 0 && distance < hazardThreshold) {
    // Hazard detected
    digitalWrite(BUZZER_PIN, LOW);
    digitalWrite(MOTOR_PIN, HIGH);
  } else {
    // No hazard
    digitalWrite(BUZZER_PIN, HIGH);
    digitalWrite(MOTOR_PIN, LOW);
  }

  delay(200);  // Adjust for responsiveness
}
